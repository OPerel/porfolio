/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AppAbout {
    'from': number;
  }
  interface AppHome {}
  interface AppNav {
    'currentLink': number;
    'prevLink': number;
  }
  interface AppPortfolio {
    'cp': number;
    'from': number;
  }
  interface AppRoot {}
  interface AppSkills {}
  interface ContactFooter {}
  interface GrowingTri {
    'color': string;
    'growDir': string;
    'to': number;
  }
  interface ParallaxEl {
    'from': number;
    'to': number;
  }
}

declare global {


  interface HTMLAppAboutElement extends Components.AppAbout, HTMLStencilElement {}
  var HTMLAppAboutElement: {
    prototype: HTMLAppAboutElement;
    new (): HTMLAppAboutElement;
  };

  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppNavElement extends Components.AppNav, HTMLStencilElement {}
  var HTMLAppNavElement: {
    prototype: HTMLAppNavElement;
    new (): HTMLAppNavElement;
  };

  interface HTMLAppPortfolioElement extends Components.AppPortfolio, HTMLStencilElement {}
  var HTMLAppPortfolioElement: {
    prototype: HTMLAppPortfolioElement;
    new (): HTMLAppPortfolioElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLAppSkillsElement extends Components.AppSkills, HTMLStencilElement {}
  var HTMLAppSkillsElement: {
    prototype: HTMLAppSkillsElement;
    new (): HTMLAppSkillsElement;
  };

  interface HTMLContactFooterElement extends Components.ContactFooter, HTMLStencilElement {}
  var HTMLContactFooterElement: {
    prototype: HTMLContactFooterElement;
    new (): HTMLContactFooterElement;
  };

  interface HTMLGrowingTriElement extends Components.GrowingTri, HTMLStencilElement {}
  var HTMLGrowingTriElement: {
    prototype: HTMLGrowingTriElement;
    new (): HTMLGrowingTriElement;
  };

  interface HTMLParallaxElElement extends Components.ParallaxEl, HTMLStencilElement {}
  var HTMLParallaxElElement: {
    prototype: HTMLParallaxElElement;
    new (): HTMLParallaxElElement;
  };
  interface HTMLElementTagNameMap {
    'app-about': HTMLAppAboutElement;
    'app-home': HTMLAppHomeElement;
    'app-nav': HTMLAppNavElement;
    'app-portfolio': HTMLAppPortfolioElement;
    'app-root': HTMLAppRootElement;
    'app-skills': HTMLAppSkillsElement;
    'contact-footer': HTMLContactFooterElement;
    'growing-tri': HTMLGrowingTriElement;
    'parallax-el': HTMLParallaxElElement;
  }
}

declare namespace LocalJSX {
  interface AppAbout {
    'from'?: number;
  }
  interface AppHome {}
  interface AppNav {
    'currentLink'?: number;
    'onNavigate'?: (event: CustomEvent<any>) => void;
    'prevLink'?: number;
  }
  interface AppPortfolio {
    'cp'?: number;
    'from'?: number;
  }
  interface AppRoot {}
  interface AppSkills {}
  interface ContactFooter {}
  interface GrowingTri {
    'color'?: string;
    'growDir'?: string;
    'to'?: number;
  }
  interface ParallaxEl {
    'from'?: number;
    'to'?: number;
  }

  interface IntrinsicElements {
    'app-about': AppAbout;
    'app-home': AppHome;
    'app-nav': AppNav;
    'app-portfolio': AppPortfolio;
    'app-root': AppRoot;
    'app-skills': AppSkills;
    'contact-footer': ContactFooter;
    'growing-tri': GrowingTri;
    'parallax-el': ParallaxEl;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'app-about': LocalJSX.AppAbout & JSXBase.HTMLAttributes<HTMLAppAboutElement>;
      'app-home': LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
      'app-nav': LocalJSX.AppNav & JSXBase.HTMLAttributes<HTMLAppNavElement>;
      'app-portfolio': LocalJSX.AppPortfolio & JSXBase.HTMLAttributes<HTMLAppPortfolioElement>;
      'app-root': LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
      'app-skills': LocalJSX.AppSkills & JSXBase.HTMLAttributes<HTMLAppSkillsElement>;
      'contact-footer': LocalJSX.ContactFooter & JSXBase.HTMLAttributes<HTMLContactFooterElement>;
      'growing-tri': LocalJSX.GrowingTri & JSXBase.HTMLAttributes<HTMLGrowingTriElement>;
      'parallax-el': LocalJSX.ParallaxEl & JSXBase.HTMLAttributes<HTMLParallaxElElement>;
    }
  }
}


